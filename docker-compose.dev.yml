services:
  postgres:
    image: postgres:17-alpine
    container_name: dpmsn_postgres
    restart: always
    env_file:
      - ./db/.env.development
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - localnet

  pgweb:
    image: sosedoff/pgweb
    container_name: dpmsn_pgweb
    restart: always
    ports:
      - "8081:8081"
    environment:
      - PGWEB_DATABASE_URL=postgres://dpmsn:dpmsn@postgres:5432/dpmsn_db?sslmode=disable
    depends_on:
      - postgres
    networks:
      - localnet

  eurekaserver:
    container_name: dpmsn_eureka_server
    build:
      context: ./backend/eurekaserver
      dockerfile: Dockerfile.dev
    ports:
      - "8761:8761"
    volumes:
      - ./backend/eurekaserver:/app
      - ~/.m2:/root/.m2
    command: "mvn spring-boot:run -Dspring.profiles.active=dev"
    networks:
      - localnet

  apigateway:
    container_name: dpmsn_api_gateway
    build:
      context: ./backend/apigateway
      dockerfile: Dockerfile.dev
    ports:
      - "1110:1110"
    environment:
      - EUREKA_SERVICE_URL=http://eurekaserver:8761/eureka/
    volumes:
      - ./backend/apigateway:/app
      - ~/.m2:/root/.m2
    command: "mvn spring-boot:run -Dspring.profiles.active=dev"
    depends_on:
      eurekaserver:
        condition: service_started
    networks:
      - localnet

  frontend:
    container_name: dpmsn_frontend
    depends_on:
      eurekaserver:
        condition: service_started
      apigateway:
        condition: service_started
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - WATCHPACK_POLLING=1
    env_file:
      - ./frontend/.env.development
    networks:
      - localnet

volumes:
  db:

networks:
  localnet:
    driver: bridge
